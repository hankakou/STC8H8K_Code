C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2025 00:07:45 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include "Delay.h"
   3          #include "GPIO.h"
   4          #include "NVIC.h"
   5          #include "UART.h"
   6          #include "Switch.h"
   7          
   8          
   9          
  10          /*typedef struct
  11          {
  12                  u8      Mode;           //IO模式,               GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_OUT_PP
  13                  u8      Pin;            //要设置的端口  
  14          } GPIO_InitTypeDef;
  15          
  16          u8      GPIO_Inilize(u8 GPIO, GPIO_InitTypeDef *GPIOx); */
  17          
  18          // IO模式的配置
  19          void GPIO_Config(){
  20   1          GPIO_InitTypeDef init;
  21   1          init.Mode=GPIO_PullUp;
  22   1          init.Pin=GPIO_Pin_0 | GPIO_Pin_1;
  23   1      
  24   1          GPIO_Inilize(GPIO_P3 , &init);
  25   1          
  26   1      }
  27          
  28          /*
  29          typedef struct
  30          { 
  31                  u8      UART_Mode;                      //模式,         UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9bit_BRTx
  32                  u8      UART_BRT_Use;           //使用波特率,   BRT_Timer1,BRT_Timer2,BRT_Timer3,BRT_Timer4
  33                  u32     UART_BaudRate;          //波特率,          一般 110 ~ 115200
  34                  u8      Morecommunicate;        //多机通讯允许, ENABLE,DISABLE
  35                  u8      UART_RxEnable;          //允许接收,   ENABLE,DISABLE
  36                  u8      BaudRateDouble;         //波特率加倍, ENABLE,DISABLE
  37          } COMx_InitDefine;
  38          
  39          */
  40          // 串口的配置
  41          void UART_Config(){
  42   1          //1.创建结构体变量
  43   1          COMx_InitDefine init;
  44   1          
  45   1          //2.给成员赋值1s发9600二进制位
  46   1          init.UART_Mode=UART_8bit_BRTx;
  47   1          // 由这个定时器来定时间，到点了之后，就告诉串口要发一个二进制位出去了！
  48   1          init.UART_BRT_Use = BRT_Timer1;
  49   1          init.UART_BaudRate=115200;
  50   1          init.UART_RxEnable=ENABLE;
  51   1          init.BaudRateDouble=DISABLE;
  52   1          
  53   1          //3.初始化串口
  54   1          // u8       UART_Configuration(u8 UARTx, COMx_InitDefine *COMx);
C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2025 00:07:45 PAGE 2   

  55   1          UART_Configuration( UART1, &init);
  56   1          
  57   1          //4.打开中断 NVIC
  58   1          NVIC_UART1_Init(ENABLE, Priority_1);
  59   1          
  60   1          //切换引脚
  61   1          UART1_SW(UART1_SW_P30_P31);
  62   1      }
  63          
  64          
  65          void main(){
  66   1          int age=18;
  67   1          char name[]="abcdefg123";
  68   1          
  69   1          //1.配置IO口
  70   1           GPIO_Config();
  71   1          
  72   1          //2.配置串口
  73   1          UART_Config();
  74   1          
  75   1          //3.打开全局中断
  76   1          EA=1;
  77   1          
  78   1          TX1_write2buff('A');
  79   1          PrintString1("start....\n");
  80   1          
  81   1      while(1)
  82   1          {
  83   2            //PrintString1("你好...\n");
  84   2      //              printf("age=%d\n"  , age);
  85   2      //              printf("name=%s\n" , name);
  86   2      //              
  87   2      //              
  88   2               TX1_write2buff('A');
  89   2             PrintString1("你好....\n");
  90   2             printf("age=%d\n",age);
  91   2             printf("name=%s\n",name);
  92   2                      delay_ms(250);
  93   2                      delay_ms(250);
  94   2                      delay_ms(250);
  95   2                      delay_ms(250); 
  96   2              
  97   2      
  98   2      
  99   2      
 100   2      }
 101   1      
 102   1      
 103   1      
 104   1      } 
 105           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    177    ----
   CONSTANT SIZE    =     49    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              01/30/2025 00:07:45 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
