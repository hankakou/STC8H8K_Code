C51 COMPILER V9.60.7.0   UART_ISR                                                          05/31/2024 15:03:11 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART_ISR
OBJECT MODULE PLACED IN .\Objects\UART_Isr.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UART_Isr.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -UART_Isr.lst) TABS(2) OBJECT(.\Objects\UART_Isr.obj)

line level    source

   1          /*---------------------------------------------------------------------*/
   2          /* --- STC MCU Limited ------------------------------------------------*/
   3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
   4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
   5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
   6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
   7          /* --- Web: www.STCAI.com ---------------------------------------------*/
   8          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   9          /* --- QQ:  800003751 -------------------------------------------------*/
  10          /* Èç¹ûÒªÔÚ³ÌÐòÖÐÊ¹ÓÃ´Ë´úÂë,ÇëÔÚ³ÌÐòÖÐ×¢Ã÷Ê¹ÓÃÁËSTCµÄ×ÊÁÏ¼°³ÌÐò            */
  11          /*---------------------------------------------------------------------*/
  12          
  13          #include "UART.h"
  14          
  15          //========================================================================
  16          // º¯Êý: UART1_ISR_Handler
  17          // ÃèÊö: UART1ÖÐ¶Ïº¯Êý.
  18          // ²ÎÊý: none.
  19          // ·µ»Ø: none.
  20          // °æ±¾: V1.0, 2020-09-23
  21          //========================================================================
  22          #ifdef UART1
  23          void UART1_ISR_Handler (void) interrupt UART1_VECTOR
  24          {
  25   1        
  26   1        // Èç¹û·¢Éú½ÓÊÕÖÐ¶Ï£¬ÄÇÃ´¾Í»áÖ´ÐÐÕâ¶ÎifµÄ´úÂë :: ½ÓÊÕÍêÒ»´ÎÊý¾ÝÖ¡¡¾8Î»Êý¾Ý¡¿£¬¾Í»á´¥·¢Ò»´ÎÖÐ¶Ï
  27   1        if(RI)
  28   1        {
  29   2          // °ÑÖÐ¶ÏµÄ±ê¼Ç¸øÖØÖÃÁË¡£
  30   2          RI = 0; 
  31   2      
  32   2              //1. ÅÐ¶ÏÏÖÔÚÒÑ¾­½ÓÊÕµ½µÄÊý¾Ý³¤¶ÈÒÑ¾­³¬¹ýÁËÒ»¸ö¹Ì¶¨µÄÖµ£¬ÄÇÃ´¾Í°ÑÒÑ¾­½ÓÊÕµ½µÄÊý¾Ý³¤¶ÈÖØÖÃÎª 0 
  33   2              if(COM1.RX_Cnt >= COM_RX1_Lenth)  COM1.RX_Cnt = 0;
  34   2          
  35   2              /*
  36   2                2. 
  37   2                  2.1 SBUF ¾ÍÊÇ´®¿Ú½ÓÊÕµ½µÄÒ»¸öÊý¾ÝÖ¡¡¾8Î»Êý¾Ý¡¿Ö®ºó£¬¾Í°ÑÕâ¸öÊý¾Ý·ÅÔÚSBUFÀïÃæ´æ×Å¡£  SBUFÖ»ÓÐÒ»¸ö×Ô¼º
             -µÄ³¤¶ÈµÄ£¡
  38   2                  2.2 ÎÒÃÇ×Ô¼ºÒª¶¨ÒåÒ»¸öÊý×é RX1_Buffer£¬ÓÃÀ´²»¶ÏµØ°ÑSBUFµÄÊý¾ÝÄÃ×ß£¬·ñÔòÏÂÒ»¸öÊý¾Ý¹ýÀ´£¬¾Í»á°ÑSBUFÔ­À
             -´µÄÊý¾Ý¸ø¶¥Ìæ|¸²¸ÇÁË£¡
  39   2                  2.3 ÎÒÃÇµÄ´úÂë¶¨ÒåÁËÒ»¸ö 128¸ö³¤¶ÈµÄÊý×é RX1_Buffer ÓÃÀ´ÁÙÊ±´æ´¢ SBUFµÄÊý¾Ý¡£
  40   2                  2.4 ÎªÁË°ÑËùÓÐ·¢¹ýÀ´µÄÊý¾Ý¶¼×°µ½Êý×éÀïÃæÈ¥£¬¶¨ÒåÁËÒ»¸öÔÚ±ä»¯µÄ³¤¶È | ÏÂ±ê ±äÁ¿ COM1.RX_Cnt £¬ ËüÄ¬ÈÏ
             -ÖµÊÇ 0 
  41   2              */
  42   2              RX1_Buffer[COM1.RX_Cnt++] = SBUF;
  43   2          
  44   2          
  45   2              //3. Ã¿´Î½ÓÊÕµ½Ò»¸öÊý¾ÝÖ¡¡¾8Î»Êý¾Ý¡¿£¬Ëü¾ÍÈÃÕâ¸ö±äÁ¿ÖØÖÃÎªÒ»¸öÖµ
  46   2      
  47   2              COM1.RX_TimeOut = TimeOutSet1;  // 5
  48   2        } 
  49   1      
  50   1        // Èç¹û·¢Éú·¢ËÍÖÐ¶Ï£¬ÄÇÃ´¾Í»áÖ´ÐÐÕâ¶ÎifµÄ´úÂë
  51   1        if(TI)
C51 COMPILER V9.60.7.0   UART_ISR                                                          05/31/2024 15:03:11 PAGE 2   

  52   1        {
  53   2          TI = 0;
  54   2          
  55   2              #if(UART_QUEUE_MODE == 1)   //ÅÐ¶ÏÊÇ·ñÊ¹ÓÃ¶ÓÁÐÄ£Ê½
                  if(COM1.TX_send != COM1.TX_write)
                  {
                    SBUF = TX1_Buffer[COM1.TX_send];
                    if(++COM1.TX_send >= COM_TX1_Lenth)   COM1.TX_send = 0;
                  }
                  else  COM1.B_TX_busy = 0;
                      #else
  63   2              COM1.B_TX_busy = 0;     //Ê¹ÓÃ×èÈû·½Ê½·¢ËÍÖ±½ÓÇå³ý·±Ã¦±êÖ¾
  64   2              #endif
  65   2        }
  66   1      }
  67          #endif
  68          
  69          //========================================================================
  70          // º¯Êý: UART2_ISR_Handler
  71          // ÃèÊö: UART2ÖÐ¶Ïº¯Êý.
  72          // ²ÎÊý: none.
  73          // ·µ»Ø: none.
  74          // °æ±¾: V1.0, 2020-09-23
  75          //========================================================================
  76          #ifdef UART2
  77          void UART2_ISR_Handler (void) interrupt UART2_VECTOR
  78          {
  79   1        if(RI2)
  80   1        {
  81   2          CLR_RI2();
  82   2      
  83   2          
  84   2              if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;
  85   2              RX2_Buffer[COM2.RX_Cnt++] = S2BUF;
  86   2              COM2.RX_TimeOut = TimeOutSet2;
  87   2        }
  88   1      
  89   1        if(TI2)
  90   1        {
  91   2          CLR_TI2();
  92   2          
  93   2              #if(UART_QUEUE_MODE == 1)   //ÅÐ¶ÏÊÇ·ñÊ¹ÓÃ¶ÓÁÐÄ£Ê½
                  if(COM2.TX_send != COM2.TX_write)
                  {
                    S2BUF = TX2_Buffer[COM2.TX_send];
                    if(++COM2.TX_send >= COM_TX2_Lenth)   COM2.TX_send = 0;
                  }
                  else  COM2.B_TX_busy = 0;
                      #else
 101   2              COM2.B_TX_busy = 0;     //Ê¹ÓÃ×èÈû·½Ê½·¢ËÍÖ±½ÓÇå³ý·±Ã¦±êÖ¾
 102   2              #endif
 103   2        }
 104   1      }
 105          #endif
 106          
 107          //========================================================================
 108          // º¯Êý: UART3_ISR_Handler
 109          // ÃèÊö: UART3ÖÐ¶Ïº¯Êý.
 110          // ²ÎÊý: none.
 111          // ·µ»Ø: none.
 112          // °æ±¾: V1.0, 2020-09-23
 113          //========================================================================
C51 COMPILER V9.60.7.0   UART_ISR                                                          05/31/2024 15:03:11 PAGE 3   

 114          #ifdef UART3
 115          void UART3_ISR_Handler (void) interrupt UART3_VECTOR
 116          {
 117   1        if(RI3)
 118   1        {
 119   2          CLR_RI3();
 120   2      
 121   2              if(COM3.RX_Cnt >= COM_RX3_Lenth)  COM3.RX_Cnt = 0;
 122   2              RX3_Buffer[COM3.RX_Cnt++] = S3BUF;
 123   2              COM3.RX_TimeOut = TimeOutSet3;
 124   2        }
 125   1      
 126   1        if(TI3)
 127   1        {
 128   2          CLR_TI3();
 129   2          
 130   2              #if(UART_QUEUE_MODE == 1)   //ÅÐ¶ÏÊÇ·ñÊ¹ÓÃ¶ÓÁÐÄ£Ê½
                  if(COM3.TX_send != COM3.TX_write)
                  {
                    S3BUF = TX3_Buffer[COM3.TX_send];
                    if(++COM3.TX_send >= COM_TX3_Lenth)   COM3.TX_send = 0;
                  }
                  else  COM3.B_TX_busy = 0;
                      #else
 138   2              COM3.B_TX_busy = 0;     //Ê¹ÓÃ×èÈû·½Ê½·¢ËÍÖ±½ÓÇå³ý·±Ã¦±êÖ¾
 139   2              #endif
 140   2        }
 141   1      }
 142          #endif
 143          
 144          //========================================================================
 145          // º¯Êý: UART4_ISR_Handler
 146          // ÃèÊö: UART4ÖÐ¶Ïº¯Êý.
 147          // ²ÎÊý: none.
 148          // ·µ»Ø: none.
 149          // °æ±¾: V1.0, 2020-09-23
 150          //========================================================================
 151          #ifdef UART4
 152          void UART4_ISR_Handler (void) interrupt UART4_VECTOR
 153          {
 154   1        if(RI4)
 155   1        {
 156   2          CLR_RI4();
 157   2      
 158   2              if(COM4.RX_Cnt >= COM_RX4_Lenth)  COM4.RX_Cnt = 0;
 159   2              RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
 160   2              COM4.RX_TimeOut = TimeOutSet4;
 161   2        }
 162   1      
 163   1        if(TI4)
 164   1        {
 165   2          CLR_TI4();
 166   2          
 167   2              #if(UART_QUEUE_MODE == 1)   //ÅÐ¶ÏÊÇ·ñÊ¹ÓÃ¶ÓÁÐÄ£Ê½
                  if(COM4.TX_send != COM4.TX_write)
                  {
                    S4BUF = TX4_Buffer[COM4.TX_send];
                    if(++COM4.TX_send >= COM_TX4_Lenth)   COM4.TX_send = 0;
                  }
                  else  COM4.B_TX_busy = 0;
                      #else
 175   2              COM4.B_TX_busy = 0;     //Ê¹ÓÃ×èÈû·½Ê½·¢ËÍÖ±½ÓÇå³ý·±Ã¦±êÖ¾
C51 COMPILER V9.60.7.0   UART_ISR                                                          05/31/2024 15:03:11 PAGE 4   

 176   2              #endif
 177   2        }
 178   1      }
 179          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    286    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
