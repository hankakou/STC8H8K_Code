C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 15:47:40 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "GPIO.h"
   2          #include "Delay.h"
   3          #include "UART.h"
   4          #include "NVIC.h"
   5          #include "Switch.h"
   6          
   7          
   8          #define LED_SW P45
   9          
  10          #define LED1 P27
  11          #define LED2 P26
  12          #define LED3 P15
  13          #define LED4 P14
  14          #define LED5 P23
  15          #define LED6 P22
  16          #define LED7 P21
  17          #define LED8 P20
  18          
  19          
  20          
  21          
  22          void GPIO_config(void) {
  23   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  24   1        
  25   1        
  26   1        //LED_SW P45
  27   1        GPIO_InitStructure.Pin  = GPIO_Pin_5;   //指定要初始化的IO,
  28   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  29   1        GPIO_Inilize(GPIO_P4, &GPIO_InitStructure);//初始化
  30   1        
  31   1        
  32   1        
  33   1        // 8个LED灯
  34   1        GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1 | GPIO_Pin_2 | GPIO_Pin_3 | GPIO_Pin_6 | GPIO_Pin_7;    /
             -/指定要初始化的IO,
  35   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  36   1        GPIO_Inilize(GPIO_P2, &GPIO_InitStructure);//初始化
  37   1        
  38   1        
  39   1          
  40   1        GPIO_InitStructure.Pin  = GPIO_Pin_4 | GPIO_Pin_5;    //指定要初始化的IO,
  41   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  42   1        GPIO_Inilize(GPIO_P1, &GPIO_InitStructure);//初始化
  43   1        
  44   1      }
  45          
  46          void UART_config(void) {
  47   1        // >>> 记得添加 NVIC.c, UART.c, UART_Isr.c <<<
  48   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  49   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 15:47:40 PAGE 2   

  50   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  51   1          COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  52   1          COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  53   1          COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  54   1          UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  55   1      
  56   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,P
             -riority_2,Priority_3
  57   1          UART1_SW(UART1_SW_P30_P31);   // 引脚选择, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_
             -P43_P44
  58   1      }
  59          
  60          
  61          void right2left(){
  62   1        int i ;
  63   1        //实现走马灯效果： 从右到左
  64   1          for(i = 1; i <=9 ;i++){
  65   2            
  66   2            LED1 = i == 1 ? 0 : 1;
  67   2            LED2 = i == 2 ? 0 : 1;
  68   2            LED3 = i == 3 ? 0 : 1;
  69   2            LED4 = i == 4 ? 0 : 1;
  70   2            LED5 = i == 5 ? 0 : 1;
  71   2            LED6 = i == 6 ? 0 : 1;
  72   2            LED7 = i == 7 ? 0 : 1;
  73   2            LED8 = i == 8 ? 0 : 1;
  74   2            
  75   2            delay_ms(100);
  76   2          }
  77   1        
  78   1      }
  79          
  80          void left2right(){
  81   1        int i ;
  82   1        //实现走马灯效果： 从左到右
  83   1          for(i = 1; i <=9 ;i++){
  84   2            
  85   2            LED1 = i == 8 ? 0 : 1;
  86   2            LED2 = i == 7 ? 0 : 1;
  87   2            LED3 = i == 6 ? 0 : 1;
  88   2            LED4 = i == 5 ? 0 : 1;
  89   2            LED5 = i == 4 ? 0 : 1;
  90   2            LED6 = i == 3 ? 0 : 1;
  91   2            LED7 = i == 2 ? 0 : 1;
  92   2            LED8 = i == 1 ? 0 : 1;
  93   2            
  94   2            delay_ms(100);
  95   2      
  96   2          }
  97   1      }
  98          
  99          
 100          
 101          void main(){
 102   1        
 103   1        // 配置IO模式
 104   1        GPIO_config();
 105   1        
 106   1        
 107   1        //配置串口
 108   1        UART_config();
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 15:47:40 PAGE 3   

 109   1        
 110   1        //中断总开关
 111   1        EA = 1;
 112   1        
 113   1        // 开启总开关
 114   1        LED_SW = 0;
 115   1      
 116   1        while(1){
 117   2          
 118   2          if(COM1.RX_Cnt > 0 && --COM1.RX_TimeOut ==0){
 119   3            
 120   3            if(RX1_Buffer[0] == 0x00){ // 从左到右
 121   4               left2right();
 122   4            }else{   // 从右到左
 123   4               right2left();
 124   4            }
 125   3            
 126   3            
 127   3            COM1.RX_Cnt = 0;
 128   3          }
 129   2          
 130   2          delay_ms(20);
 131   2          
 132   2        }
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    429    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
