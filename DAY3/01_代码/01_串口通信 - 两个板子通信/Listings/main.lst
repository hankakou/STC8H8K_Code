C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 09:18:16 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          
   2          #include "GPIO.h"
   3          #include "NVIC.h"
   4          #include "UART.h"
   5          #include "Switch.h"
   6          #include "Delay.h"
   7          
   8          void GPIO_Config(){
   9   1      
  10   1        GPIO_InitTypeDef init;
  11   1        init.Mode = GPIO_PullUp;    //IO模式,     GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_OUT_PP
  12   1        init.Pin = GPIO_Pin_0 |  GPIO_Pin_1;    //要设置的端口  
  13   1        GPIO_Inilize(GPIO_P3 , &init);
  14   1        
  15   1        //配置52 和 53
  16   1        
  17   1        init.Mode = GPIO_PullUp;    //IO模式,     GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_OUT_PP
  18   1        init.Pin = GPIO_Pin_2 |  GPIO_Pin_3;    //要设置的端口  
  19   1        GPIO_Inilize(GPIO_P5 , &init);
  20   1        
  21   1        
  22   1      }
  23          
  24          void UART_Config(){
  25   1      
  26   1        COMx_InitDefine init;
  27   1        
  28   1        init.UART_Mode = UART_8bit_BRTx;      //模式,         UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9bit_BRT
             -x
  29   1        init.UART_BRT_Use = BRT_Timer1;   //使用波特率,   BRT_Timer1,BRT_Timer2,BRT_Timer3,BRT_Timer4
  30   1        init.UART_BaudRate = 115200;    //波特率,      一般 110 ~ 115200
  31   1        init.UART_RxEnable = ENABLE;    //允许接收,   ENABLE,DISABLE
  32   1        init.BaudRateDouble = DISABLE;    //波特率加倍, ENABLE,DISABLE
  33   1        
  34   1        //初始化 串口1
  35   1        UART_Configuration(UART1 , &init);
  36   1        
  37   1        //中断使能 串口1
  38   1        NVIC_UART1_Init(ENABLE , Priority_1);
  39   1        
  40   1        //切换引脚  串口1
  41   1        UART1_SW(UART1_SW_P30_P31);
  42   1        
  43   1        
  44   1        //配置串口4
  45   1        init.UART_Mode = UART_8bit_BRTx;      //模式,         UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UART_9bit_BRT
             -x
  46   1        init.UART_BRT_Use = BRT_Timer4;   //使用波特率,   BRT_Timer1,BRT_Timer2,BRT_Timer3,BRT_Timer4
  47   1        init.UART_BaudRate = 115200;    //波特率,      一般 110 ~ 115200
  48   1        init.UART_RxEnable = ENABLE;    //允许接收,   ENABLE,DISABLE
  49   1        init.BaudRateDouble = DISABLE;    //波特率加倍, ENABLE,DISABLE
  50   1        
  51   1        //初始化 串口4
  52   1        UART_Configuration(UART4 , &init);
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 09:18:16 PAGE 2   

  53   1        
  54   1        //中断使能 串口4
  55   1        NVIC_UART4_Init(ENABLE , Priority_1);
  56   1        
  57   1        //切换引脚 串口4
  58   1        UART4_SW(UART4_SW_P52_P53);
  59   1        
  60   1        
  61   1      }
  62          
  63          void main(){
  64   1        int i;
  65   1        
  66   1        //1. IO配置
  67   1        GPIO_Config();
  68   1        
  69   1        //2. 串口配置
  70   1        UART_Config();
  71   1        
  72   1        //3. 打开全局中断
  73   1        EA = 1;
  74   1      
  75   1        while(1){
  76   2          
  77   2          //========================处理串口1的数据 【串口1收到数据之后，使用串口4写出去】=================
  78   2          //1. 获取PC发送过来的数据【PC发送过来的数据是通过串口1发送过来的。】
  79   2          if(COM1.RX_Cnt > 0 && --COM1.RX_TimeOut == 0){
  80   3              
  81   3            //要考虑数据可能有很多的情况，所以要使用for循环
  82   3            for(i = 0  ; i < COM1.RX_Cnt ; i++){
  83   4              
  84   4                // 先别忙着发给对面的板子，先把这份数据回写给PC，证明我们串口的通信是没有问题的！
  85   4                //TX1_write2buff(RX1_Buffer[i]);
  86   4              
  87   4              
  88   4                // 把数据通过串口4，写给对面的板子
  89   4                TX4_write2buff(RX1_Buffer[i]);
  90   4            }
  91   3            
  92   3            //重置长度
  93   3            COM1.RX_Cnt = 0 ;
  94   3          }
  95   2        
  96   2          
  97   2          //======================处理串口4的数据【串口4收到数据之后，使用串口1写出去】 ======================
  98   2          if(COM4.RX_Cnt > 0 && --COM4.RX_TimeOut == 0){
  99   3             for(i = 0 ; i < COM4.RX_Cnt ; i++){
 100   4               
 101   4               //使用串口1把串口4的缓冲区数据写出去，这样就能写到PC上了。
 102   4                TX1_write2buff(RX4_Buffer[i]);
 103   4             }
 104   3             
 105   3             COM4.RX_Cnt = 0 ;
 106   3          }
 107   2          
 108   2          delay_ms(20);
 109   2        }
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    257    ----
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 09:18:16 PAGE 3   

   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
