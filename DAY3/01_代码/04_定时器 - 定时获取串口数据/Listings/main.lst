C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 14:51:07 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "GPIO.h"
   2          #include "NVIC.h"
   3          #include "Timer.h"
   4          #include "Switch.h"
   5          #include "UART.h"
   6          
   7          
   8          void GPIO_Config(void) {
   9   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
  10   1        GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1;    //指定要初始化的IO,
  11   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_O
             -UT_PP
  12   1        GPIO_Inilize(GPIO_P3, &GPIO_InitStructure);//初始化
  13   1      }
  14          
  15          
  16          void UART_Config(void) {
  17   1        // >>> 记得添加 NVIC.c, UART.c, UART_Isr.c <<<
  18   1          COMx_InitDefine   COMx_InitStructure;         //结构定义
  19   1          COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,U
             -ART_9bit_BRTx
  20   1          COMx_InitStructure.UART_BRT_Use   = BRT_Timer1;     //选择波特率发生器, BRT_Timer1, BRT_Timer2 (注意: 串
             -口2固定使用BRT_Timer2)
  21   1          COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  22   1          COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  23   1          COMx_InitStructure.BaudRateDouble = DISABLE;      //波特率加倍, ENABLE或DISABLE
  24   1          UART_Configuration(UART1, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  25   1      
  26   1          NVIC_UART1_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,P
             -riority_2,Priority_3
  27   1          UART1_SW(UART1_SW_P30_P31);   // 引脚选择, UART1_SW_P30_P31,UART1_SW_P36_P37,UART1_SW_P16_P17,UART1_SW_
             -P43_P44
  28   1      }
  29          
  30          void Timer_Config(){
  31   1        TIM_InitTypeDef init;
  32   1        
  33   1        init.TIM_Mode = TIM_16BitAutoReload;    //工作模式,   TIM_16BitAutoReload,TIM_16Bit,TIM_8BitAutoReload,TIM_
             -16BitAutoReloadNoMask
  34   1        init.TIM_ClkSource = TIM_CLOCK_1T;  //时钟源    TIM_CLOCK_1T,TIM_CLOCK_12T,TIM_CLOCK_Ext
  35   1        init.TIM_ClkOut = DISABLE;    //可编程时钟输出, ENABLE,DISABLE
  36   1        init.TIM_Value = 65535 - (MAIN_Fosc / 1000);    //装载初值
  37   1        init.TIM_Run = ENABLE;    //是否运行    ENABLE,DISABLE
  38   1        
  39   1        Timer_Inilize(Timer2 , &init);
  40   1        
  41   1        //中断使能
  42   1        NVIC_Timer2_Init(ENABLE , Priority_1);
  43   1      
  44   1      }
  45          
  46          int i ;
  47          int count = 0;
  48          void handle_timer0_interrupt(){
C51 COMPILER V9.60.7.0   MAIN                                                              06/01/2024 14:51:07 PAGE 2   

  49   1      
  50   1        count++;
  51   1        if(count == 20){
  52   2          // 获取串口的数据
  53   2          
  54   2          if(COM1.RX_Cnt > 0 && --COM1.RX_TimeOut == 0){
  55   3            
  56   3            for( i= 0 ; i < COM1.RX_Cnt ; i++){
  57   4               TX1_write2buff(RX1_Buffer[i]);
  58   4            }
  59   3            
  60   3            COM1.RX_Cnt = 0;
  61   3            
  62   3          }
  63   2          //重置 count
  64   2          count = 0 ;
  65   2        }
  66   1      }
  67          
  68          void main(){
  69   1        
  70   1        //1. IO配置
  71   1        GPIO_Config();
  72   1        
  73   1        //2. 串口配置
  74   1        UART_Config();
  75   1        
  76   1        //3. 定时器配置
  77   1        Timer_Config();
  78   1        
  79   1        //4. 打开全局中断
  80   1        EA = 1 ;
  81   1        
  82   1      
  83   1        while(1){
  84   2        }
  85   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    186    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
